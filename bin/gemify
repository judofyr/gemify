#!/usr/bin/env ruby

$:.unshift File.dirname(__FILE__)+"/../lib"

require 'gemify'
require 'optparse'

options = {}
options[:manifest] = :auto
options[:interactive] = true # Interactive by default
options[:included_files] = false
options[:ui] = "cli"

parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{opts.program_name} [options]"
  opts.separator ""
  opts.separator "Options:"
  opts.on("-h", "--help",  "Shows this message") do |val|
    $stdout.puts opts
    exit(0)
  end
  opts.on("-I", "--no-interactive", "Automaticically builds the gem") do |val|
    options[:interactive] = false
  end
  opts.on("-i", "--included-files", "Show included files") do |val|
    options[:included_files] = true
  end
  opts.on("-m", "--manifest TYPE",
    "Where to look for the manifest:",
    "  file = Inside a MANIFEST-file",
    "  vcs = Search inside different VCS",
    "  basic = lib/ + bin/",
    "  auto (default) = Tries all of the above",
    " ",
    "You can also give it a single VCS:",
    "git, darcs, hg, bzr, svn or cvs") do |val|
    options[:manifest] = val.to_sym
  end
  #opts.on("-u", "--ui NAME", "Specifies user interface") do |name|
  #  options[:ui] = name
  #end
end

begin
  parser.parse!(ARGV)
rescue => e
  $stderr.puts "Error: #{e.message}"
  $stdout.puts parser
  exit -1
end

begin
  ui = Gemify::UI.use(options[:ui]).new(options[:manifest])
  if options[:included_files]
    puts ui.base.files
  elsif options[:interactive]
    ui.main
  else
    unless ui.base.build!
      puts "If you want to use this options, you need to run"
      puts "gemify, set the required options and save it."
    end
  end
rescue Gemify::UI::EmptyManifest
  puts "Can't find anything to make a gem out of..."
end
